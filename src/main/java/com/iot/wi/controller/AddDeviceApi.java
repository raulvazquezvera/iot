/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.iot.wi.controller;

import java.util.Optional;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.context.request.NativeWebRequest;

import com.iot.wi.model.AddDeviceDto;
import com.iot.wi.model.ErrorDto;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-12-18T21:23:58.041237+01:00[Europe/Madrid]")
@Validated
@Api(value = "addDevice", description = "the addDevice API")
public interface AddDeviceApi {

	default Optional<NativeWebRequest> getRequest() {
		return Optional.empty();
	}

	/**
	 * POST /addDevice : Add device to inventory
	 *
	 * @param addDeviceDto (required)
	 * @return Device added (status code 200) or BadRequest (status code 400) or
	 *         Internal server error (status code 500) or Service unavailable
	 *         (status code 503)
	 */
	@ApiOperation(value = "Add device to inventory", nickname = "addDevicePost", notes = "", tags = {})
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Device added"),
			@ApiResponse(code = 400, message = "BadRequest", response = ErrorDto.class),
			@ApiResponse(code = 500, message = "Internal server error", response = ErrorDto.class),
			@ApiResponse(code = 503, message = "Service unavailable", response = ErrorDto.class) })
	@PostMapping(value = "/addDevice", produces = { "application/json" }, consumes = { "application/json" })
	default ResponseEntity<?> addDevicePost(
			@ApiParam(value = "", required = true) @Valid @RequestBody AddDeviceDto addDeviceDto) {
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

	}

}
